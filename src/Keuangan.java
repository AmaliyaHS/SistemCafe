/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Amalia
 */
public class Keuangan extends javax.swing.JFrame {

    /**
     * Creates new form Keuangan
     */
    
    private int x;
    private int y;
    
    private static Connection c;
    private static Statement s;
    private static ResultSet rs;
    private static PreparedStatement ps;
    private static DefaultTableModel model = new DefaultTableModel();
    
    int jumlah = 0;
    
    public Keuangan() {
        initComponents();
        this.setLocationRelativeTo(null); // center form in the screen
        this.setResizable(false); // prevent frame from being resized
        currentTime();
        for(int i = 0; i < laporanTable.getRowCount(); i++) {
            String angka = laporanTable.getValueAt(i, 3).toString();
            jumlah += Integer.parseInt(angka);
        }
        String ubah0 = String.valueOf(jumlah);
        totalField.setText(ubah0);
    }
    
    int getIndex() {
        return searchComboBox.getSelectedIndex() - 1;
    }
    
    int getColumn() {
        return inputComboBox.getSelectedIndex() - 1;
    }
    
    public void currentTime() {
        Thread clock = new Thread() {
            public void run() {
                try {
                    for(;;) {
                    Calendar cal = new GregorianCalendar();
                    int month = cal.get(Calendar.MONTH);
                    int year = cal.get(Calendar.YEAR);
                    int day = cal.get(Calendar.DATE);
                    tanggalLabel.setText(year + "-" + (month+1) + "-" + day);

                    int second = cal.get(Calendar.SECOND);
                    int minute = cal.get(Calendar.MINUTE);
                    int hour = cal.get(Calendar.HOUR);
                    jamLabel.setText(hour + ":" + minute + ":" + second);
                    sleep(1000);
                    }
                }catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        };
        clock.start();
    }
    
    private void filter(String query) {
        model = (DefaultTableModel) laporanTable.getModel();
        TableRowSorter<DefaultTableModel> tr = new 
        TableRowSorter<DefaultTableModel> (model);
        
        laporanTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query, getIndex()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        editButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        searchComboBox = new javax.swing.JComboBox<>();
        deleteButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        inputComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tanggalLabel = new javax.swing.JLabel();
        jamLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        laporanTable = new javax.swing.JTable();
        resetButton = new javax.swing.JButton();
        totalField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        inputField = new javax.swing.JTextField();
        panel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 178, 207));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        editButton.setBackground(new java.awt.Color(255, 178, 207));
        editButton.setText("Edit");
        editButton.setPreferredSize(new java.awt.Dimension(75, 25));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        closeButton.setBackground(new java.awt.Color(255, 178, 207));
        closeButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        closeButton.setText("X");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Swis721 WGL4 BT", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Search");

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        searchComboBox.setBackground(new java.awt.Color(255, 178, 207));
        searchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "by transaksi ke-", "by tanggal", "by nama", "by pendapatan" }));
        searchComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchComboBoxItemStateChanged(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 178, 207));
        deleteButton.setText("Delete");
        deleteButton.setPreferredSize(new java.awt.Dimension(75, 25));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Swis721 WGL4 BT", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Input");

        inputComboBox.setBackground(new java.awt.Color(255, 178, 207));
        inputComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "to transaksi ke-", "to tanggal", "to nama", "to pendapatan" }));
        inputComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                inputComboBoxItemStateChanged(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/keuangan/logo fix.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Pink Cafe");

        tanggalLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        tanggalLabel.setForeground(new java.awt.Color(255, 255, 255));
        tanggalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jamLabel.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        jamLabel.setForeground(new java.awt.Color(255, 255, 255));
        jamLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        laporanTable.setModel(model);
        setupTable();
        jScrollPane1.setViewportView(laporanTable);

        resetButton.setBackground(new java.awt.Color(255, 178, 207));
        resetButton.setText("Reset");
        resetButton.setPreferredSize(new java.awt.Dimension(75, 25));
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        totalField.setEditable(false);
        totalField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        totalField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Total");

        panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelMouseDragged(evt);
            }
        });
        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(306, 306, 306)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jamLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tanggalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addComponent(closeButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(247, 247, 247)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(inputComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(totalField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jamLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(tanggalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(closeButton)))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(inputComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(totalField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        model.setRowCount(0);
        model.setColumnCount(0);
        setVisible(false);
        MenuAdmin slide = new MenuAdmin();
        slide.setVisible(true);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        int row = laporanTable.getSelectedRow();
        String dapat = inputField.getText();
        
        int berapa = Integer.parseInt(model.getValueAt(row, 0).toString());
        String tanggal = model.getValueAt(row, 1).toString();
        String namaKasir = model.getValueAt(row, 2).toString();
        int pendapatan = Integer.parseInt(model.getValueAt(row, 3).toString());
        
        if(laporanTable.getSelectedRowCount() == 1) {
            try {
                openDb();
                model.setValueAt(dapat, row, getColumn());
                if(getColumn() == 0) {
                    int ubah = Integer.parseInt(dapat);
                    ps = c.prepareStatement("UPDATE `laporan` SET berapa = " + 
                        ubah + ", tanggal = '" + tanggal + "', namaKasir = '" + 
                        namaKasir + "', pendapatan = " + pendapatan + " WHERE "
                        + "berapa = " + berapa);
                    ps.executeUpdate();
                } else if(getColumn() == 1) {
                    ps = c.prepareStatement("UPDATE `laporan` SET berapa = " + 
                        berapa + ", tanggal = '" + dapat + "', namaKasir = '" + 
                        namaKasir + "', pendapatan = " + pendapatan + " WHERE "
                        + "berapa = " + berapa);
                    ps.executeUpdate();
                } else if(getColumn() == 2) {
                    ps = c.prepareStatement("UPDATE `laporan` SET berapa = " + 
                        berapa + ", tanggal = '" + tanggal + "', namaKasir = '" 
                        + dapat + "', pendapatan = " + pendapatan + " WHERE "
                        + "berapa = " + berapa);
                    ps.executeUpdate();
                } else if(getColumn() == 3) {
                    int ubah = Integer.parseInt(dapat);
                    ps = c.prepareStatement("UPDATE `laporan` SET berapa = " + 
                        berapa + ", tanggal = '" + tanggal + "', namaKasir = '" 
                        + namaKasir + "', pendapatan = " + ubah + " WHERE "
                        + "berapa = " + berapa);
                    ps.executeUpdate();
                } else if(getColumn() == -1){
                    JOptionPane.showMessageDialog(null, "Tolong perhatikan"
                        + " pilihan inputannya!");
                }
                JOptionPane.showMessageDialog(null, "Edit Successfully");
            } catch(SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
            } finally {
                closeDb();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Harap Edit Satu per Satu");
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int row = laporanTable.getSelectedRow();
        int selected = Integer.parseInt(model.getValueAt(row, 0).toString());
        
        if(laporanTable.getSelectedRowCount() == 1) {
            model.removeRow(laporanTable.getSelectedRow());
            try {
                openDb();
                ps = c.prepareStatement("DELETE FROM `laporan` WHERE "
                + "berapa = "+ selected);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Delete Successfully");
            } catch(SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
            } finally {
                closeDb();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Harap Delete Satu per Satu");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        int clear = model.getRowCount();
        
        for(int i = clear - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        try {
            openDb();
            //s = c.createStatement();
            s.executeUpdate("DELETE FROM `laporan`");
        } catch(SQLException | ClassNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, ex.getLocalizedMessage());
        } finally {
            closeDb();
        }
    }//GEN-LAST:event_resetButtonActionPerformed

    private void inputComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_inputComboBoxItemStateChanged
        // TODO add your handling code here:
        inputComboBox.getSelectedIndex();
    }//GEN-LAST:event_inputComboBoxItemStateChanged

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
        String query = searchField.getText();
        
        filter(query);
    }//GEN-LAST:event_searchFieldKeyReleased

    private void searchComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchComboBoxItemStateChanged
        // TODO add your handling code here:
        searchComboBox.getSelectedIndex();
    }//GEN-LAST:event_searchComboBoxItemStateChanged

    private void panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseDragged
        int x1 = evt.getXOnScreen();
        int y1 = evt.getYOnScreen();

        this.setLocation(x1-x, y1-y);
    }//GEN-LAST:event_panelMouseDragged

    private void panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMousePressed
        this.x = evt.getX();
        this.y = evt.getY();
    }//GEN-LAST:event_panelMousePressed

    /**
     * @param args the command line arguments
     */
    
    private static void openDb() throws ClassNotFoundException, SQLException {
       String URL = "jdbc:mysql://localhost:3306/dbkasir";
       String USERNAME = "root";
       String PASSWORD = "";
       
       Class.forName("com.mysql.cj.jdbc.Driver");
       c = DriverManager.getConnection(URL, USERNAME, PASSWORD);
       s = c.createStatement();
    }
    
    private static void closeDb() {
        try {
            rs.close();
            s.close();
            c.close();
        } catch(SQLException e) {
            e.printStackTrace();
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Keuangan().setVisible(true);
                int jumlah = 0;
            }
        });
    }
    
    private static void setupTable() {
        model.addColumn("Transaksi ke-");
        model.addColumn("Tanggal");
        model.addColumn("Nama Kasir");
        model.addColumn("Pendapatan");
        
        try {
            openDb();
            rs = s.executeQuery("SELECT * FROM `laporan`");
            
            while(rs.next()) {
                Object[] row = {
                    rs.getString("berapa"),
                    rs.getString("tanggal"),
                    rs.getString("namaKasir"),
                    rs.getString("pendapatan")
                };
                model.addRow(row);
            }
        }catch(SQLException | ClassNotFoundException ex) {
            ex.printStackTrace();
        } finally {
            closeDb();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JComboBox<String> inputComboBox;
    private javax.swing.JTextField inputField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jamLabel;
    private javax.swing.JTable laporanTable;
    private javax.swing.JLabel panel;
    private javax.swing.JButton resetButton;
    private javax.swing.JComboBox<String> searchComboBox;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel tanggalLabel;
    private javax.swing.JTextField totalField;
    // End of variables declaration//GEN-END:variables
}
